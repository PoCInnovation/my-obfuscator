name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

defaults:
  run:
    shell: bash

jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Rust
        run: |
          set -euo pipefail
          rustup default beta
          rustup component add rustfmt
      - name: Add problem matchers
        run: echo "::add-matcher::.github/problem_matchers.json"
      - name: Check Rust formatting
        run: cargo fmt --check
  clippy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Rust
        run: |
          set -euo pipefail
          rustup default beta
          rustup component add clippy
      - name: Add problem matchers
        run: echo "::add-matcher::.github/problem_matchers.json"
      - name: Run Clippy
        run: cargo clippy -- -Dwarnings
  checks:
    strategy:
      fail-fast: true
      matrix:
        rust-version: [ "stable", "beta", "nightly" ]
        os: [ "ubuntu-latest", "windows-latest", "macos-latest" ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Rust
        run: |
          set -euo pipefail
          rustup default ${{ matrix.rust-version }}
      - name: Add problem matchers
        run: echo "::add-matcher::.github/problem_matchers.json"
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose

